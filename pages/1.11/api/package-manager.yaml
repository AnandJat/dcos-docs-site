swagger: '2.0'
info:
  version: ''
  title: DC/OS Package and Service
  description: ''
paths:
  /package/repository/delete:
    post:
      operationId: POST-package-repository-delete
      description: Deletes a package repository (for example Universe) from DC/OS.
      produces:
        - application/vnd.dcos.package.repository.delete-response+json;charset=utf-8;version=v1
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/packageRepositoryDeleteResponse'
      consumes:
        - application/vnd.dcos.package.repository.delete-request+json;charset=utf-8;version=v1
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/packageRepositoryDeleteRequest'
        - name: Accept
          in: header
          required: true
          enum:
            - application/vnd.dcos.package.repository.delete-request+json;charset=utf-8;version=v1
          type: string
  /package/list-versions:
    post:
      operationId: POST-package-list-versions
      description: List all of the available versions for a given package name.
      produces:
        - application/vnd.dcos.package.list-versions-response+json;charset=utf-8;version=v1
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/listVersionsResponse'
      consumes:
        - application/vnd.dcos.package.list-versions-request+json;charset=utf-8;version=v1
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/listVersionsRequest'
        - name: Accept
          in: header
          required: true
          enum:
            - application/vnd.dcos.package.list-versions-request+json;charset=utf-8;version=v1
          type: string
  /package/repository/add:
    post:
      operationId: POST-package-repository-add
      description: Adds a package repository (for example Universe) for use by DC/OS. To add a package repository to the beginning of the list set the index to zero (0). To add a package repository to the end of the list do not specify an index.
      produces:
        - application/vnd.dcos.package.repository.add-response+json;charset=utf-8;version=v1
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/packageRepositoryAddResponse'
      consumes:
        - application/vnd.dcos.package.repository.add-request+json;charset=utf-8;version=v1
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/packageRepositoryAddRequest'
        - name: Accept
          in: header
          required: true
          enum:
            - application/vnd.dcos.package.repository.add-request+json;charset=utf-8;version=v1
          type: string
  /service/update:
    post:
      operationId: POST-service-update
      description: Updates the package version and/or the configuration of a DC/OS Service
      produces:
        - application/vnd.dcos.service.update-response+json;charset=utf-8;version=v1
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/serviceUpdateResponse'
      consumes:
        - application/vnd.dcos.service.update-request+json;charset=utf-8;version=v1
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/serviceUpdateRequest'
        - name: Accept
          in: header
          required: true
          enum:
            - application/vnd.dcos.service.update-request+json;charset=utf-8;version=v1
          type: string
  /package/uninstall:
    post:
      operationId: POST-package-uninstall
      description: 'description: Stops a running service that was launched from a DC/OS package.'
      produces:
        - application/vnd.dcos.package.uninstall-response+json;charset=utf-8;version=v1
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/uninstallResponse'
      consumes:
        - application/vnd.dcos.package.uninstall-request+json;charset=utf-8;version=v1
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/uninstallRequest'
        - name: Accept
          in: header
          required: true
          enum:
            - application/vnd.dcos.package.uninstall-request+json;charset=utf-8;version=v1
          type: string
  /package/list:
    post:
      operationId: POST-package-list
      description: Lists all of the running DC/OS services started from a DC/OS package.
      produces:
        - application/vnd.dcos.package.list-response+json;charset=utf-8;version=v1
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/listResponse'
      consumes:
        - application/vnd.dcos.package.list-request+json;charset=utf-8;version=v1
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/listRequest'
        - name: Accept
          in: header
          required: true
          enum:
            - application/vnd.dcos.package.list-request+json;charset=utf-8;version=v1
          type: string
  /package/install:
    post:
      operationId: POST-package-install
      description: Runs a service from a Universe package.
      produces:
        - application/vnd.dcos.package.install-response+json;charset=utf-8;version=v2
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/installResponse'
      consumes:
        - application/vnd.dcos.package.install-request+json;charset=utf-8;version=v1
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/installRequest'
        - name: Accept
          in: header
          required: true
          enum:
            - application/vnd.dcos.package.install-request+json;charset=utf-8;version=v1
          type: string
  /package/repository/list:
    post:
      operationId: POST-package-repository-list
      description: ' List all of the package repositories (for example Universe) used by DC/OS. The list is ordered by priority; if multiple repositories contain the same package, the package closest to the start of the list will be used.'
      produces:
        - application/vnd.dcos.package.repository.list-response+json;charset=utf-8;version=v1
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/packageRepositoryListResponse'
      consumes:
        - application/vnd.dcos.package.repository.list-request+json;charset=utf-8;version=v1
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/packageRepositoryListRequest'
        - name: Accept
          in: header
          required: true
          enum:
            - application/vnd.dcos.package.repository.list-request+json;charset=utf-8;version=v1
          type: string
  /package/describe:
    post:
      operationId: POST-package-describe
      description: 'Show information about the package, including the required resources and configuration to start the service, and command line extensions that are included with the package.'
      produces:
        - application/vnd.dcos.package.describe-response+json;charset=utf-8;version=v3
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/describeResponse'
      consumes:
        - application/vnd.dcos.package.describe-request+json;charset=utf-8;version=v1
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/describeRequest'
        - name: Accept
          in: header
          required: true
          enum:
            - application/vnd.dcos.package.describe-request+json;charset=utf-8;version=v1
          type: string
  /service/describe:
    post:
      operationId: POST-service-describe
      description: Describes a DC/OS Service
      produces:
        - application/vnd.dcos.service.describe-response+json;charset=utf-8;version=v1
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/serviceDescribeResponse'
      consumes:
        - application/vnd.dcos.service.describe-request+json;charset=utf-8;version=v1
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/serviceDescribeRequest'
        - name: Accept
          in: header
          required: true
          enum:
            - application/vnd.dcos.service.describe-request+json;charset=utf-8;version=v1
          type: string
  /package/search:
    post:
      operationId: POST-package-search
      description: Lists all matching packages in the repository given a partial pattern. The character * can be used to match any number of characters.
      produces:
        - application/vnd.dcos.package.search-response+json;charset=utf-8;version=v1
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/searchResponse'
      consumes:
        - application/vnd.dcos.package.search-request+json;charset=utf-8;version=v1
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/searchRequest'
        - name: Accept
          in: header
          required: true
          enum:
            - application/vnd.dcos.package.search-request+json;charset=utf-8;version=v1
          type: string
  /package/render:
    post:
      operationId: POST-package-render
      description: 'Generates the Marathon application definition for the package name, version, and optional configuration JSON object.'
      produces:
        - application/vnd.dcos.package.render-response+json;charset=utf-8;version=v1
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/renderResponse'
      consumes:
        - application/vnd.dcos.package.render-request+json;charset=utf-8;version=v1
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/renderRequest'
        - name: Accept
          in: header
          required: true
          enum:
            - application/vnd.dcos.package.render-request+json;charset=utf-8;version=v1
          type: string
  /capabilities:
    get:
      operationId: GET-capabilities
      description: List all of the capabilities supported by DC/OS.
      produces:
        - application/vnd.dcos.capabilities+json;charset=utf-8;version=v1
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/capabilitiesResponse'
definitions:
  packageRepositoryDeleteResponse:
    type: object
    additionalProperties: false
    properties:
      repositories:
        type: array
        items:
          $ref: '#/definitions/pkgRepo'
    required:
      - repositories
  renderResponse:
    type: object
    additionalProperties: false
    properties:
      marathonJson:
        type: object
        additionalProperties: true
    required:
      - marathonJson
  packageInformation:
    type: object
    additionalProperties: false
    properties:
      packageDefinition:
        $ref: '#/definitions/packageDetails'
      resourceDefinition:
        $ref: '#/definitions/v20Resource'
    required:
      - packageDefinition
  searchResponse:
    type: object
    additionalProperties: false
    properties:
      packages:
        type: array
        items:
          type: object
          additionalProperties: false
          properties:
            name:
              type: string
            description:
              type: string
            versions:
              type: object
              additionalProperties: true
            tags:
              type: array
              items:
                type: string
                pattern: '^[^\s]+$'
            selected:
              type: boolean
            framework:
              type: boolean
            images:
              type: object
              additionalProperties: false
              properties:
                icon-small:
                  type: string
                  description: 'PNG icon URL, preferably 48 by 48 pixels.'
                icon-medium:
                  type: string
                  description: 'PNG icon URL, preferably 128 by 128 pixels.'
                icon-large:
                  type: string
                  description: 'PNG icon URL, preferably 256 by 256 pixels.'
                screenshots:
                  type: array
                  items:
                    type: string
                    description: 'PNG screen URL, preferably 1024 by 1024 pixels.'
            currentVersion:
              type: string
          required:
            - currentVersion
            - description
            - framework
            - name
            - tags
            - versions
  url:
    type: string
    allOf:
      - format: uri
      - pattern: '^https?://'
  marathon:
    type: object
    additionalProperties: false
    properties:
      v2AppMustacheTemplate:
        $ref: '#/definitions/base64String'
    required:
      - v2AppMustacheTemplate
  serviceUpdateRequest:
    type: object
    additionalProperties: false
    properties:
      appId:
        type: string
      replace:
        type: boolean
        description: If true any stored configuration will be ignored when producing the updated service configuration.
      packageVersion:
        type: string
      options:
        type: object
        additionalProperties: true
    required:
      - appId
      - replace
  v30Resource:
    type: object
    additionalProperties: false
    properties:
      assets:
        type: object
        additionalProperties: false
        properties:
          uris:
            type: object
            additionalProperties:
              type: string
          container:
            type: object
            additionalProperties: false
            properties:
              docker:
                type: object
                additionalProperties:
                  type: string
      images:
        type: object
        additionalProperties: false
        properties:
          icon-small:
            type: string
            description: 'PNG icon URL, preferably 48 by 48 pixels.'
          icon-medium:
            type: string
            description: 'PNG icon URL, preferably 128 by 128 pixels.'
          icon-large:
            type: string
            description: 'PNG icon URL, preferably 256 by 256 pixels.'
          screenshots:
            type: array
            items:
              type: string
              description: 'PNG screen URL, preferably 1024 by 1024 pixels.'
      cli:
        $ref: '#/definitions/cli'
  packageRepositoryAddResponse:
    type: object
    additionalProperties: false
    properties:
      repositories:
        type: array
        items:
          $ref: '#/definitions/pkgRepo'
    required:
      - repositories
  listVersionsResponse:
    type: object
    additionalProperties: false
    properties:
      results:
        type: object
        additionalProperties: true
    required:
      - results
  listResponse:
    type: object
    additionalProperties: false
    properties:
      packages:
        type: array
        items:
          $ref: '#/definitions/installation'
        description: The list of installed packages
    required:
      - packages
  packageRepositoryAddRequest:
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
      uri:
        $ref: '#/definitions/url'
      index:
        type: integer
        minimum: 0
    required:
      - name
      - uri
  packageRepositoryListResponse:
    type: object
    additionalProperties: false
    properties:
      repositories:
        type: array
        items:
          $ref: '#/definitions/pkgRepo'
    required:
      - repositories
  describeRequest:
    type: object
    additionalProperties: false
    properties:
      packageName:
        type: string
      packageVersion:
        type: string
    required:
      - packageName
  capabilitiesResponse:
    type: object
    additionalProperties: false
    properties:
      capabilities:
        type: array
        items:
          $ref: '#/definitions/capability'
    required:
      - capabilities
  packageRepositoryListRequest:
    type: object
    additionalProperties: false
  config:
    type: object
    additionalProperties: true
  serviceDescribeResponse:
    type: object
    additionalProperties: false
    properties:
      package:
        $ref: '#/definitions/v40PackageDefinition'
      userProvidedOptions:
        type: object
        additionalProperties: true
        description: The options the user provided to run the service
      downgradesTo:
        type: array
        items:
          type: string
      resolvedOptions:
        type: object
        additionalProperties: true
        description: The result of merging the default package options with the user supplied options
      upgradesTo:
        type: array
        items:
          type: string
    required:
      - downgradesTo
      - package
      - upgradesTo
  command:
    type: object
    additionalProperties: false
    properties:
      pip:
        type: array
        items:
          type: string
        description: '[Deprecated v3.x] An array of strings representing of the requirements file to use for installing the subcommand for Pip. Each item is interpreted as a line in the requirements file.'
    required:
      - pip
  licence:
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
        description: 'The name of the license. For example one of [Apache License Version 2.0 | MIT License | BSD License | Proprietary]'
      url:
        $ref: '#/definitions/url'
    required:
      - name
      - url
  installResponse:
    type: object
    additionalProperties: false
    properties:
      packageName:
        type: string
      packageVersion:
        type: string
      appId:
        type: string
    required:
      - appId
      - packageName
      - packageVersion
  hash:
    type: object
    additionalProperties: false
    properties:
      algo:
        type: string
        enum:
          - sha256
      value:
        type: string
    required:
      - algo
      - value
  serviceUpdateResponse:
    type: object
    additionalProperties: false
    properties:
      resolvedOptions:
        type: object
        additionalProperties: true
        description: The result of merging the default package options with the user supplied options
      marathonDeploymentId:
        type: string
      package:
        $ref: '#/definitions/v40PackageDefinition'
    required:
      - marathonDeploymentId
      - package
      - resolvedOptions
  installation:
    type: object
    additionalProperties: false
    properties:
      appId:
        type: string
      packageInformation:
        $ref: '#/definitions/packageInformation'
    required:
      - appId
      - packageInformation
  installRequest:
    type: object
    additionalProperties: false
    properties:
      packageName:
        type: string
      packageVersion:
        type: string
      appId:
        type: string
      options:
        type: object
        additionalProperties: true
    required:
      - packageName
  uninstallResponse:
    type: object
    additionalProperties: false
    properties:
      results:
        type: array
        items:
          type: object
          additionalProperties: false
          properties:
            packageName:
              type: string
            appId:
              type: string
            packageVersion:
              type: string
            postUninstallNotes:
              type: string
          required:
            - appId
            - packageName
    required:
      - results
  capability:
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
    required:
      - name
  describeResponse:
    type: object
    additionalProperties: false
    properties:
      package:
        $ref: '#/definitions/packageDetails'
      config:
        $ref: '#/definitions/config'
      command:
        $ref: '#/definitions/command'
      marathonMustache:
        type: string
      resource:
        $ref: '#/definitions/v20Resource'
    required:
      - marathonMustache
      - package
  listVersionsRequest:
    type: object
    additionalProperties: false
    properties:
      packageName:
        type: string
      includePackageVersions:
        type: boolean
    required:
      - includePackageVersions
      - packageName
  serviceDescribeRequest:
    type: object
    additionalProperties: false
    properties:
      appId:
        type: string
    required:
      - appId
  v20Resource:
    type: object
    additionalProperties: false
    properties:
      assets:
        type: object
        additionalProperties: false
        properties:
          uris:
            type: object
            additionalProperties:
              type: string
          container:
            type: object
            additionalProperties: false
            properties:
              docker:
                type: object
                additionalProperties:
                  type: string
      images:
        type: object
        additionalProperties: false
        properties:
          icon-small:
            type: string
            description: 'PNG icon URL, preferably 48 by 48 pixels.'
          icon-medium:
            type: string
            description: 'PNG icon URL, preferably 128 by 128 pixels.'
          icon-large:
            type: string
            description: 'PNG icon URL, preferably 256 by 256 pixels.'
          screenshots:
            type: array
            items:
              type: string
              description: 'PNG screen URL, preferably 1024 by 1024 pixels.'
  packageDetails:
    type: object
    additionalProperties: false
    properties:
      licenses:
        type: array
        items:
          $ref: '#/definitions/licence'
      website:
        type: string
      name:
        type: string
      postInstallNotes:
        type: string
        description: Post installation notes that would be useful to the user of this package.
      scm:
        type: string
      description:
        type: string
      packagingVersion:
        type: string
      tags:
        type: array
        items:
          type: string
          pattern: '^[^\s]+$'
      postUninstallNotes:
        type: string
        description: Post uninstallation notes that would be useful to the user of this package.
      maintainer:
        type: string
      selected:
        type: boolean
        default: false
        description: Flag indicating if the package is selected in search results
      framework:
        type: boolean
        default: false
        description: True if this package installs a new Mesos framework.
      version:
        type: string
      preInstallNotes:
        type: string
        description: Pre installation notes that would be useful to the user of this package.
      releaseVersion:
        type: integer
        minimum: 0
        description: Corresponds to the revision index from the universe directory structure
    required:
      - description
      - maintainer
      - name
      - packagingVersion
      - tags
      - version
  cli:
    type: object
    additionalProperties: false
    properties:
      binaries:
        type: object
        additionalProperties: false
        properties:
          darwin:
            type: object
            additionalProperties: false
            properties:
              x86-64:
                $ref: '#/definitions/cliInfo'
            required:
              - x86-64
          linux:
            type: object
            additionalProperties: false
            properties:
              x86-64:
                $ref: '#/definitions/cliInfo'
            required:
              - x86-64
          windows:
            type: object
            additionalProperties: false
            properties:
              x86-64:
                $ref: '#/definitions/cliInfo'
            required:
              - x86-64
        minProperties: 1
    required:
      - binaries
  base64String:
    type: string
    pattern: '^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{4}|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)$'
  renderRequest:
    type: object
    additionalProperties: false
    properties:
      packageName:
        type: string
      packageVersion:
        type: string
      appId:
        type: string
      options:
        type: object
        additionalProperties: true
    required:
      - packageName
  uninstallRequest:
    type: object
    additionalProperties: false
    properties:
      packageName:
        type: string
      appId:
        type: string
      all:
        type: boolean
    required:
      - packageName
  packageRepositoryDeleteRequest:
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
      uri:
        $ref: '#/definitions/url'
  listRequest:
    type: object
    additionalProperties: false
    properties:
      packageName:
        type: string
      appId:
        type: string
  cliInfo:
    type: object
    additionalProperties: false
    properties:
      contentHash:
        type: array
        items:
          $ref: '#/definitions/hash'
        minItems: 1
      kind:
        type: string
        enum:
          - executable
          - zip
      url:
        $ref: '#/definitions/url'
    required:
      - contentHash
      - kind
      - url
  searchRequest:
    type: object
    additionalProperties: false
    properties:
      query:
        type: string
  pkgRepo:
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
      uri:
        $ref: '#/definitions/url'
    required:
      - name
      - uri
  v40PackageDefinition:
    type: object
    additionalProperties: false
    properties:
      licenses:
        type: array
        items:
          $ref: '#/definitions/licence'
      website:
        type: string
      name:
        type: string
      postInstallNotes:
        type: string
        description: Post installation notes that would be useful to the user of this package.
      marathon:
        $ref: '#/definitions/marathon'
      scm:
        type: string
      description:
        type: string
      packagingVersion:
        type: string
        enum:
          - '2.0'
          - '3.0'
          - '4.0'
      tags:
        type: array
        items:
          type: string
          pattern: '^[^\s]+$'
      postUninstallNotes:
        type: string
        description: Post uninstallation notes that would be useful to the user of this package.
      maintainer:
        type: string
      selected:
        type: boolean
        default: false
        description: Flag indicating if the package is selected in search results
      config:
        $ref: '#/definitions/config'
      command:
        $ref: '#/definitions/command'
      framework:
        type: boolean
        default: false
        description: True if this package installs a new Mesos framework.
      downgradesTo:
        type: array
        items:
          type: string
        description: 'List of versions that this package can downgrade to. If the property is a list containing the string ''*'', this package can downgrade to any version. If the property is not set or the empty list, this package cannot downgrade.'
      version:
        type: string
        pattern: '^[-a-zA-Z0-9.]+$'
      resource:
        $ref: '#/definitions/v30Resource'
      preInstallNotes:
        type: string
        description: Pre installation notes that would be useful to the user of this package.
      minDcosReleaseVersion:
        type: string
        description: The minimum DC/OS Release Version the package can run on.
        pattern: '^(?:0|[1-9][0-9]*)(?:\.(?:0|[1-9][0-9]*))*$'
      releaseVersion:
        type: integer
        minimum: 0
        description: Corresponds to the revision index from the universe directory structure
      upgradesFrom:
        type: array
        items:
          type: string
        description: 'List of versions that can upgrade to this package. If the property is a list containing the string ''*'', any version can upgrade to this package. If the property is not set or the empty list, no version can upgrade to this package.'
    required:
      - description
      - maintainer
      - name
      - packagingVersion
      - releaseVersion
      - tags
      - version
